package com.xdcs.client;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;
import javax.swing.filechooser.FileFilter;

import com.xdcs.util.SocketUtil;
import com.xdcs.vo.User;

/**
 * 注册页面
 * 
 * @author Administrator
 *
 */
public class Regist extends JFrame {
	private JPanel contentPane;
	private JTextField textField;
	private JTextField textField_1;
	private JTextField textField_2;
	private JTextField textField_4;
	private JTextField textField_5;
	private JTextField textField_6;
	private JFileChooser chooser;
	private JLabel icon;
	private JTextField type;
	private BufferedReader br;
	private PrintWriter pw;
	private String url;
	private ObjectInputStream ois;
	private ObjectOutputStream oos;

	/**
	 * 创建注册页面 初始化控件
	 */
	public Regist() {

		setTitle("注册列表");
		setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
		setBounds(100, 100, 403, 480);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		JLabel lblNewLabel = new JLabel("用  户  名：");
		lblNewLabel.setFont(new Font("华文楷体", Font.PLAIN, 17));
		lblNewLabel.setBounds(34, 20, 84, 23);
		contentPane.add(lblNewLabel);

		JLabel label = new JLabel("密        码：");
		label.setFont(new Font("华文楷体", Font.PLAIN, 17));
		label.setBounds(34, 60, 83, 23);
		contentPane.add(label);

		JLabel lblNewLabel_1 = new JLabel("确认密码：");
		lblNewLabel_1.setFont(new Font("华文楷体", Font.PLAIN, 17));
		lblNewLabel_1.setBounds(34, 100, 85, 23);
		contentPane.add(lblNewLabel_1);

		JLabel lblNewLabel_3 = new JLabel("年        龄：");
		lblNewLabel_3.setFont(new Font("华文楷体", Font.PLAIN, 17));
		lblNewLabel_3.setBounds(34, 140, 83, 23);
		contentPane.add(lblNewLabel_3);

		JLabel lblNewLabel_4 = new JLabel("联系方式：");
		lblNewLabel_4.setFont(new Font("华文楷体", Font.PLAIN, 17));
		lblNewLabel_4.setBounds(34, 180, 85, 23);
		contentPane.add(lblNewLabel_4);

		JLabel lblNewLabel_5 = new JLabel("家庭住址：");
		lblNewLabel_5.setFont(new Font("华文楷体", Font.PLAIN, 17));
		lblNewLabel_5.setBounds(34, 220, 85, 23);
		contentPane.add(lblNewLabel_5);

		JLabel lblNewLabel_9 = new JLabel("选择头像：");
		lblNewLabel_9.setFont(new Font("华文楷体", Font.PLAIN, 17));
		lblNewLabel_9.setBounds(34, 260, 85, 23);
		contentPane.add(lblNewLabel_9);
		JButton butUrl = new JButton("选择");
		butUrl.setBounds(138, 260, 60, 21);

		icon = new JLabel();
		icon.setBounds(220, 260, 60, 60);
		// icon.setBorder(BorderFactory.createLineBorder(Color.RED));
		contentPane.add(icon);
		contentPane.add(butUrl);
		// 添加图片选择点击事件
		butUrl.addActionListener(new ActionListener() {
			/**
			 * 头像选择事件
			 */
			public void actionPerformed(ActionEvent e) {
				// 创建文件选择器
				chooser = new JFileChooser();
				// 创建jpg文件过滤
				JpgFileFilter jpgFilter = new JpgFileFilter(); // jpg过滤器
				// 创建gif文件过滤
				GifFileFilter gifFilter = new GifFileFilter(); // gif过滤器
				chooser.addChoosableFileFilter(jpgFilter); // 加载jpg文件过滤器
				chooser.addChoosableFileFilter(gifFilter); // 加载gif文件过滤器

				// 设置默认的文件管理器。如果不设置,则最后添加的文件过滤器为默认过滤器
				chooser.setFileFilter(jpgFilter);
				chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);// 设置只能选择目录
				int returnVal = chooser.showOpenDialog(chooser);

				if (returnVal == JFileChooser.APPROVE_OPTION) {
					String selectPath = chooser.getSelectedFile().getPath();
					File file = new File(selectPath);
					url = "src/com/xdcs/swing/image/" + file.getName();
					try {
						// 将文件上传到项目中
						// 将上传到项目中的头像以相对路径保存
						BufferedInputStream bi = new BufferedInputStream(new FileInputStream(file));
						BufferedOutputStream bo = new BufferedOutputStream(
								new FileOutputStream("src/com/xdcs/swing/image/" + file.getName()));
						byte[] buff = new byte[1024];
						int len = 0;
						while ((len = bi.read(buff)) != -1) {
							bo.write(buff, 0, len);
							bo.flush();
						}
					} catch (FileNotFoundException e2) {
						e2.printStackTrace();
					} catch (IOException e1) {
						e1.printStackTrace();
					}

				}

				icon.setIcon(new ImageIcon(url));
			}
		});

		JLabel lblNewLabel_2 = new JLabel("性        别：");
		lblNewLabel_2.setFont(new Font("华文楷体", Font.PLAIN, 17));
		lblNewLabel_2.setBounds(34, 300, 83, 23);
		contentPane.add(lblNewLabel_2);

		textField = new JTextField();
		textField.setBounds(138, 20, 191, 21);
		contentPane.add(textField);
		textField.setColumns(10);

		textField_1 = new JTextField();
		textField_1.setBounds(138, 60, 191, 21);
		contentPane.add(textField_1);
		textField_1.setColumns(10);

		textField_2 = new JTextField();
		textField_2.setBounds(139, 100, 190, 21);
		contentPane.add(textField_2);
		textField_2.setColumns(10);

		textField_4 = new JTextField();
		textField_4.setBounds(139, 140, 190, 21);
		contentPane.add(textField_4);
		textField_4.setColumns(10);

		textField_5 = new JTextField();
		textField_5.setBounds(139, 180, 190, 21);
		contentPane.add(textField_5);
		textField_5.setColumns(10);

		textField_6 = new JTextField();
		textField_6.setBounds(139, 220, 190, 21);
		contentPane.add(textField_6);
		textField_6.setColumns(10);

		final JComboBox<String> comboBox = new JComboBox<>();
		comboBox.setModel(new DefaultComboBoxModel<String>(new String[] { "男", "女" }));
		comboBox.setBounds(138, 300, 64, 21);
		contentPane.add(comboBox);

		JLabel jLabel = new JLabel("用户类型");
		jLabel.setFont(new Font("华文楷体", Font.PLAIN, 17));
		jLabel.setBounds(34, 340, 83, 23);
		contentPane.add(jLabel);

		final JComboBox<String> comboBox1 = new JComboBox<String>();
		comboBox1.setModel(new DefaultComboBoxModel<String>(new String[] { "普通用户", "商家" }));
		comboBox1.setBounds(138, 340, 100, 21);
		contentPane.add(comboBox1);

		JButton button = new JButton("注      册");
		// 校验各文本框是否内容为空
		button.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if ("".equals(textField.getText())) {
					JOptionPane.showMessageDialog(null, "用户名不能为空！");
					return;
				}
				if ("".equals(textField_1.getText())) {
					JOptionPane.showMessageDialog(null, "密码不能为空！");
					return;
				}
				if ("".equals(textField_2.getText())) {
					JOptionPane.showMessageDialog(null, "确认密码不能为空！");
					return;
				}
				if ("".equals(textField_4.getText())) {
					JOptionPane.showMessageDialog(null, "年龄不能为空！");
					return;
				} else {
					String regex = "[1-9][0-9]{0,1}";
					if (!textField_4.getText().matches(regex)) {
						JOptionPane.showMessageDialog(null, "年龄不合法！");
						return;
					}
				}
				if ("".equals(textField_5.getText())) {
					JOptionPane.showMessageDialog(null, "联系方式不能为空！");
					return;
				}
				if ("".equals(textField_6.getText())) {
					JOptionPane.showMessageDialog(null, "家庭住址不能为空！");
					return;
				}
				// 校验确认密码与 密码输入值是否相同
				if (!textField_1.getText().equals(textField_2.getText())) {
					JOptionPane.showMessageDialog(null, "两次密码输入不相同！");
					return;
				}

				String username = textField.getText();
				String password = textField_1.getText();
				String age = textField_4.getText();
				String tel = textField_5.getText();
				String address = textField_6.getText();
				String sex = comboBox.getSelectedItem().toString();
				String type = (comboBox1.getSelectedItem()).toString();
				User user = new User();
				user.setUsername(username);
				user.setPassword(password);
				user.setAge(Integer.parseInt(age));
				user.setTel(tel);
				user.setSex(sex);
				user.setType(type);
				user.setAddress(address);
				user.setIconUrl(url);
				// String str = "regist," + username + "," + password + "," +
				// sex + "," + age + "," + type + "," + tel
				// + "," + address;
				boolean bool = false;
				List<Object> list = new ArrayList<>();
				try {
					list.add("regist");
					list.add(user);
					// 获取对象输出流
					// 将对象传输到后台
					oos = SocketUtil.getObjectOutputStream();
					oos.writeObject(list);
					oos.flush();
					// 获取对象输入流
					// 读取后台返回的结果
					ois = SocketUtil.getObjectInputStream();
					list = (List<Object>) ois.readObject();
					bool = Boolean.parseBoolean(list.get(0).toString());
				} catch (IOException e1) {
					e1.printStackTrace();
				} catch (ClassNotFoundException e1) {
					e1.printStackTrace();
				}
				if (bool) {
					JOptionPane.showMessageDialog(null, "登陆成功!");
					Regist.this.setVisible(false);
				} else {
					JOptionPane.showMessageDialog(null, "注册失败!");
				}

			}
		});
		button.setFont(new Font("华文楷体", Font.PLAIN, 17));
		button.setBounds(111, 385, 155, 37);
		button.setContentAreaFilled(false);
		contentPane.add(button);

		JLabel lblNewLabel_6 = new JLabel("");
		lblNewLabel_6.setIcon(new
		ImageIcon(Regist.class.getResource("../swing/image/imagebig.png")));
		lblNewLabel_6.setBounds(0, 0, 387, 480);
		contentPane.add(lblNewLabel_6);
	}

	/**
	 * jpg文件过滤类
	 * 
	 * @author Administrator
	 *
	 */
	class JpgFileFilter extends FileFilter {
		public String getDescription() {
			return "*.jpg";
		}

		public boolean accept(File file) {
			String name = file.getName();
			return name.toLowerCase().endsWith(".jpg");
		}
	}

	/**
	 * gif文件过滤类
	 * 
	 * @author Administrator
	 *
	 */
	class GifFileFilter extends FileFilter {
		public String getDescription() {
			return "*.gif";
		}

		public boolean accept(File file) {
			String name = file.getName();
			return name.toLowerCase().endsWith(".gif");
		}
	}

}
