package com.xdcs.swing.consumer;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;

import javax.swing.AbstractListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;

import com.xdcs.util.CellRenderer;
import com.xdcs.util.SocketUtil;
import com.xdcs.vo.Goods;
import com.xdcs.vo.Order;
import com.xdcs.vo.Order.GoodsItem;
import com.xdcs.vo.User;

/**
 * 购物车
 * 
 * @author Administrator
 *
 */

public class GoodCart extends JFrame {

	private JPanel contentPane;
	private JTextField textField;
	private JTextField textField_1;
	private JTextField textField_2;
	private JTextField textField_3;
	private JList<String> list;
	private User user;
	private List<Order> orderList;
	private JList superLlist;
	private List<Goods> goods;

	public JList getList() {
		return list;
	}

	public void setList(JList list) {
		this.list = list;
	}

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		new GoodCart().setVisible(true);

	}

	/**
	 * Create the frame.
	 */
	public GoodCart() {
		setTitle("购物车");
		setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
		setBounds(100, 100, 494, 479);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		JLabel label = new JLabel("用户名：");
		label.setFont(new Font("华文楷体", Font.PLAIN, 15));
		label.setBounds(10, 20, 76, 35);
		contentPane.add(label);

		JLabel label_1 = new JLabel("联系方式：");
		label_1.setFont(new Font("华文楷体", Font.PLAIN, 15));
		label_1.setBounds(225, 25, 87, 25);
		contentPane.add(label_1);

		JLabel label_2 = new JLabel("地址：");
		label_2.setFont(new Font("华文楷体", Font.PLAIN, 15));
		label_2.setBounds(10, 65, 54, 20);
		contentPane.add(label_2);

		textField = new JTextField();
		textField.setBounds(96, 27, 106, 21);
		contentPane.add(textField);
		textField.setColumns(10);

		textField_1 = new JTextField();
		textField_1.setColumns(10);
		textField_1.setBounds(322, 27, 132, 21);
		contentPane.add(textField_1);

		textField_2 = new JTextField();
		textField_2.setColumns(10);
		textField_2.setBounds(96, 67, 358, 21);
		contentPane.add(textField_2);

		list = new JList<String>();
		list.setCellRenderer(new CellRenderer());
		// list.setFont(new Font("华文楷体", Font.BOLD, 18));
		list.setBounds(10, 121, 458, 255);
		contentPane.add(list);

		JLabel label_3 = new JLabel("购物车列表");
		label_3.setFont(new Font("华文楷体", Font.PLAIN, 15));
		label_3.setBounds(10, 88, 87, 25);
		contentPane.add(label_3);

		JButton btnNewButton = new JButton("确认购买");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				ObjectInputStream ois = SocketUtil.getObjectInputStream();
				ObjectOutputStream oos = SocketUtil.getObjectOutputStream();
				boolean bool = false;
				try {

					// List<Goods> modify = new ArrayList<>();
					// for (int i = 0; i < orderList.size(); i++) {
					// Order o = orderList.get(i);
					// List<GoodsItem> items = o.getGoodsList();
					// for (int j = 0; j < items.size(); j++) {
					// GoodsItem gi = items.get(j);
					// for (int k = 0; k < goods.size(); k++) {
					// Goods g = goods.get(k);
					// if (gi.getGoodID().equals(g.getID())) {
					// goods.remove(g);
					// g.setGoodSellCount(g.getGoodSellCount() + gi.getCount());
					// modify.add(g);
					// goods.add(g);
					// }
					// }
					// }
					// }
					List<Object> ll = new ArrayList<>();
					ll.add("buyGoods");
					ll.add(orderList);
					// ll.add(modify);
					oos.writeObject(ll);
					oos.flush();
					ll = (List<Object>) ois.readObject();
					bool = Boolean.parseBoolean(ll.get(0).toString());
					List<Goods> goodList = (List<Goods>) ll.get(1);
					superLlist.setListData(goodList.toArray());
				} catch (IOException e1) {
					e1.printStackTrace();
				} catch (ClassNotFoundException e1) {
					e1.printStackTrace();
				}
				if (bool) {
					JOptionPane.showMessageDialog(null, "购买成功");
					GoodCart.this.list.setListData(new String[] { "" });
				} else {
					JOptionPane.showMessageDialog(null, "购买失败");
				}
			}
		});
		btnNewButton.setBounds(354, 386, 100, 50);
		contentPane.add(btnNewButton);

		JLabel label_4 = new JLabel("金额：");
		label_4.setFont(new Font("华文楷体", Font.PLAIN, 17));
		label_4.setBounds(10, 386, 76, 50);
		contentPane.add(label_4);

		textField_3 = new JTextField();
		textField_3.setBounds(84, 401, 92, 21);
		contentPane.add(textField_3);
		textField_3.setColumns(10);
		textField_3.setEditable(false);

		JLabel label_5 = new JLabel("");
		label_5.setIcon(new ImageIcon(GoodCart.class.getResource("/com/xdcs/swing/image/imagebig.png")));
		label_5.setBounds(0, 0, 478, 436);
		contentPane.add(label_5);
	}

	public GoodCart(User user, List<Order> list, List<Goods> gList) {
		this();
		this.user = user;
		this.textField.setText(user.getUsername());
		this.textField_1.setText(user.getTel());
		this.textField_2.setText(user.getAddress());
		this.orderList = list;
		this.goods = gList;

		double money = 0;
		for (Order order : list) {
			List<GoodsItem> goodsList = order.getGoodsList();
			for (GoodsItem goodsItem : goodsList) {
				String goodId = goodsItem.getGoodID();
				int count = goodsItem.getCount();
				for (Goods good : gList) {
					if (good.getID().equals(goodId)) {
						money += good.getGoodPrice() * count;
					}
				}
			}
		}
		this.textField_3.setText(Double.toString(money));
	}

	public GoodCart(User user2, List<Order> orderList2, List<Goods> goods, JList list2) {
		this(user2, orderList2, goods);
		System.out.println("这是构造方法的goods的输出-----" + goods);
		this.superLlist = list2;
	}

}
